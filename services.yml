apiVersion: v1
kind: Service
metadata:
  name: fleetman-webapp
spec:
  # Defines which pods are going to be represented by this service
  # This service becomes network endpoint for either other services or external users (e.g. browsers)
  selector:
    app: webapp
  ports:
    - name: http
      port: 80
      # Use nodePort for minikube and targetPort for GKE or AWS (q: do you need targetPort at all?)
      #targetPort: 80
      #nodePort: 30080
  # Use NodePort for minikube and LoadBalancer for GKE or AWS
  type: LoadBalancer
  #type: NodePort

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-queue
spec:
  selector:
    app: queue
  ports:
    - name: http
      port: 8161
      # Remove access to admin console
      #nodePort: 30010

    - name: endpoint
      port: 61616
  #type: NodePort
  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-position-tracker

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: position-tracker

  ports:
    - name: http
      port: 8080

  type: ClusterIP

---
apiVersion: v1
kind: Service
metadata:
  name: fleetman-api-gateway

spec:
  # This defines which pods are going to be represented by this Service
  # The service becomes a network endpoint for either other services
  # or maybe external users to connect to (eg browser)
  selector:
    app: api-gateway

  ports:
    - name: http
      port: 8080

  type: ClusterIP

